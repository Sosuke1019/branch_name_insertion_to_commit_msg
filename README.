# branchname_insertion_to_comitmsg

## コミットメッセージにブランチ名を自動挿入できるようにする

### MRガイドライン
- branch名は、`feature/チケット番号_英語によるブランチの説明`
  - ex) `feature/12345_sample_branch`
- commit messageは、`commit -m "#チケット番号 変更した内容"`
  - ex) `#12345 不要なファイルの削除`
- 

### 要件定義
- [x] コミット時に、branch名のチケット番号をcommit messageのprefixとして自動挿入する  
→ コミットワークフローフックの1つである、prepare-commit-msgフックでブランチ名のチケット番号のみ取得し、commit messageのprefixとして自動挿入するように設定
- [x] `--amend`時にはブランチ名の挿入を行わない  
→ コミットメッセージエディターの1行目が空であれば何もしない
- [x] チケット番号をmessageのprefixとして挿入せずにコミットできる機能を設ける  
→ `git commit -m ""`でコミットすれば、チケット番号を含めずに通常通りコミットできる。
- [x] merge commit はgitのデフォルトメッセージが適用される
- [x] Macユーザーも使用できる
→ sedではなくperlでワンライナーを書いたので、環境に依存しない





注意
- 任意のプロジェクトで、hooks設定する(`$ vi .git/hooks/prepare-commit-msg`) 
  もしくは会社のPCならgitの方で自前のディレクトリを読み込めるようにしてもよい(`$ git config --global init.templatedir '~/.git_template'`)
- sampleファイルが生成されない場合も記載する


git commit --amend：
- amend"＝「修正する、改める」
- 直前のコミットを修正するためのコマンド
- 具体的には、「コミットメッセージの修正」、「コミット内容を後から追加」の2点のことができる
- 「コミットからファイルを削除」と「2つ以上前のコミットを修正」はできない。
- push済みのコミットを修正してしまうと、禁断のコマンドgit push -fを使わざるを得なくなるため、amendを行うのはpushする前。

prepare-commit-msgフック：
- コミットメッセージエディターが起動する直前、デフォルトメッセージが生成された直後に実行される
- デフォルトメッセージを、ユーザーの目に触れる前に編集できる
- フックにはパラメータがある。その時点でのコミットメッセージを保存したファイルへのパス、コミットのタイプ、さらにamendされたコミットの場合はコミットの SHA-1 をパラメータとして取る。

git hook：
- フックは、クライアントサイドとサーバーサイドの二つのグループに分けられる
  - クライアントサイド：コミットやマージといったクライアントでの操作の際に実行される
  - サーバーサイド：プッシュされたコミットの受け取りといったネットワーク操作の際に実行される
- フックは、`.git/hooks`にある。
- `git init` して新しいリポジトリを初期化した際に、サンプルのスクリプトが`hooks` ディレクトリにある。  
　　!写真挿入!



デモの準備を社用pcで行う
スライドを社用pcに送る